{"remainingRequest":"g:\\Nejinn Lerity Admin\\last\\bootstrap-yaoxin-sidebar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!g:\\Nejinn Lerity Admin\\last\\bootstrap-yaoxin-sidebar\\src\\views\\container1.vue?vue&type=template&id=a2c77d2c&scoped=true&","dependencies":[{"path":"g:\\Nejinn Lerity Admin\\last\\bootstrap-yaoxin-sidebar\\src\\views\\container1.vue","mtime":1579882802603},{"path":"g:\\Nejinn Lerity Admin\\last\\bootstrap-yaoxin-sidebar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"g:\\Nejinn Lerity Admin\\last\\bootstrap-yaoxin-sidebar\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"g:\\Nejinn Lerity Admin\\last\\bootstrap-yaoxin-sidebar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"g:\\Nejinn Lerity Admin\\last\\bootstrap-yaoxin-sidebar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}